package projet.UI;

import projet.sih.*;

import java.io.File;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.odftoolkit.odfdom.doc.OdfTextDocument;

/**
 *
 * @author Marina
 */
public class LettreSortieUI extends javax.swing.JFrame {

    private Patient currentPatient;
    private ServiceCliniqueIU scIU;
    private PersonnelMedical currentPH;

    /**
     * Creates new form LettreSortie
     */
    public LettreSortieUI() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        Date date = new Date(System.currentTimeMillis());
        DateFormat df1 = new SimpleDateFormat("dd / MM / yyyy");
        jLabelDate.setText(df1.format(date));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelPatient = new javax.swing.JLabel();
        jLabelMedecin = new javax.swing.JLabel();
        jLabelDiagnostic = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDiagnostic = new javax.swing.JTextArea();
        jLabelTraitement = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaTraitement = new javax.swing.JTextArea();
        jButtonOK = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("Lettre de sortie");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Date : ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Patient : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Médecin : ");

        jLabelDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabelPatient.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabelMedecin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabelDiagnostic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDiagnostic.setText("Diagnostic :");

        jTextAreaDiagnostic.setColumns(20);
        jTextAreaDiagnostic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaDiagnostic.setLineWrap(true);
        jTextAreaDiagnostic.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDiagnostic);

        jLabelTraitement.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTraitement.setText("Traitement réalisé : ");

        jTextAreaTraitement.setColumns(20);
        jTextAreaTraitement.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaTraitement.setLineWrap(true);
        jTextAreaTraitement.setRows(5);
        jScrollPane2.setViewportView(jTextAreaTraitement);

        jButtonOK.setBackground(new java.awt.Color(153, 153, 255));
        jButtonOK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonAnnuler.setBackground(new java.awt.Color(153, 153, 255));
        jButtonAnnuler.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabelDiagnostic)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(jLabelTraitement)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelMedecin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAnnuler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonOK)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelMedecin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelDiagnostic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTraitement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOK)
                    .addComponent(jButtonAnnuler))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        JOptionPane j = new JOptionPane();
        int retour = j.showConfirmDialog(this, "Êtes-vous sûr de vouloir créer cette lettre ?", "Confirmation", JOptionPane.OK_CANCEL_OPTION);
        if (retour == JOptionPane.OK_OPTION) {
            try {
                GenererLettreSortie(currentPH, currentPatient);
                JOptionPane j2 = new JOptionPane();
                String sql = "update patient set etat = 1 where ipp =" + currentPatient.getIPP();
                CHUPP.getInsert(sql);
                scIU.getjLabelIPP().setText("");
                scIU.getjLabelPatient().setText("");
                scIU.revalidate();
                scIU.repaint();
                j2.showMessageDialog(this, "La lettre a bien été créée !", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(LettreSortieUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            setVisible(false);
        }
    }//GEN-LAST:event_jButtonOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelDiagnostic;
    private javax.swing.JLabel jLabelMedecin;
    private javax.swing.JLabel jLabelPatient;
    private javax.swing.JLabel jLabelTraitement;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaDiagnostic;
    private javax.swing.JTextArea jTextAreaTraitement;
    // End of variables declaration//GEN-END:variables

    public void GenererLettreSortie(PersonnelMedical ph1, Patient p1) throws Exception {
        if (jTextAreaDiagnostic.getText().equals("") || jTextAreaTraitement.getText().equals("")) {
            JOptionPane j = new JOptionPane();
            j.showMessageDialog(null,"Vous avez oublié de remplir un des champ","Attention",JOptionPane.WARNING_MESSAGE);
        } else {
            Date d = new Date(new java.util.Date().getTime());
            DateFormat df1 = new SimpleDateFormat("dd-MM-yyyy");
            DateFormat df2 = new SimpleDateFormat("hh:mm");
            // Create a text document from a standard template (empty documents within the JAR)
            OdfTextDocument odt = OdfTextDocument.newTextDocument();

            // Append text to the end of the document. 
            odt.newImage(new File("src/Images/Princeton-Plainsboro.jpg").toURI());
            odt.newParagraph();
            odt.addText("Dr. " + ph1.getNom() + " " + ph1.getPrenom());
            odt.newParagraph();
            odt.addText("CHU de Princeton-Plainsboro");
            odt.newParagraph();
            odt.addText("Tel : 04.83.73.73.44");
            odt.newParagraph();
            odt.newParagraph();
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("__________________________________________________________________ le " + df1.format(d) + ",");
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("Lettre à destination de : Dr. " + p1.getMedGen());
            odt.newParagraph();
            odt.addText(p1.getAdGen());
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("\n\nObjet : Sortie de Mr." + p1.getNom() + " " + p1.getPrenom());
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("\n\nJe soussigné Dr." + ph1.getNom() + " " + ph1.getPrenom() + ", autorise le patient " + p1.getNom() + " " + p1.getPrenom() + " à sortir du Service " + ph1.getSpecialite() + " à compter du " + df1.format(d) + " à " + df2.format(d) + "h.");
            odt.newParagraph();
            odt.addText("Cette sortie intervient suite au diagnostic suivant :");
            odt.newParagraph();
            odt.newParagraph();
            odt.addText(jTextAreaDiagnostic.getText());
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("Le patient " + p1.getNom() + " " + p1.getPrenom() + " est autorisé à sortir du Service " + ph1.getSpecialite() + " suite à l'administration du traitement suivant :");
            odt.newParagraph();
            odt.newParagraph();
            odt.addText(jTextAreaTraitement.getText());
            odt.newParagraph();
            odt.newParagraph();
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("Cordialement,");
            odt.newParagraph();
            odt.newParagraph();
            odt.addText("Dr " + ph1.getNom() + " " + ph1.getPrenom());
            odt.newParagraph();

            // Save document
            String sql = "select distinct accesslettre from practicien_hospitalier where nom='" + ph1.getNom() + "' and prenom='" + ph1.getPrenom() + "'";
            ResultSet result = CHUPP.getRequete(sql);
            result.first();
            odt.save(result.getString("accesslettre") + "\\Lettre de sortie de Mr " + p1.getNom() + " " + p1.getPrenom() + ", né le " + df1.format(p1.getDateNaissance()) + ".odt");

            if (scIU.getDlm().contains(currentPatient.getNom() + " " + currentPatient.getPrenom() + " / " + currentPatient.getDateNaissance())) {
                scIU.getjList1().setSelectedIndex(1);
                scIU.getDlm().removeElement(currentPatient.getNom() + " " + currentPatient.getPrenom() + " / " + currentPatient.getDateNaissance());
                scIU.getjList1().setModel(scIU.getDlm());
                scIU.getjList1().revalidate();
                scIU.getjList1().repaint();
            }
        }
    }

    /**
     * @param currentPatient the currentPatient to set
     */
    public void setCurrentPatient(Patient currentPatient) {
        this.currentPatient = currentPatient;
    }

    /**
     * @param currentPH the currentPH to set
     */
    public void setCurrentPH(PersonnelMedical currentPH) {
        this.currentPH = currentPH;
    }

    /**
     * @return the jLabelMedecin
     */
    public javax.swing.JLabel getjLabelMedecin() {
        return jLabelMedecin;
    }

    /**
     * @return the jLabelPatient
     */
    public javax.swing.JLabel getjLabelPatient() {
        return jLabelPatient;
    }

    /**
     * @param scIU the scIU to set
     */
    public void setScIU(ServiceCliniqueIU scIU) {
        this.scIU = scIU;
    }
}
